services:

  app:
    image: ghcr.io/maybe-finance/maybe:latest
    volumes:
      - app-storage:/rails/storage
    restart: unless-stopped
    environment:
      SELF_HOSTED: "true"
      RAILS_FORCE_SSL: "false"
      RAILS_ASSUME_SSL: "false"
      GOOD_JOB_EXECUTION_MODE: async
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:?}
      DB_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB:-maybe_production}
      POSTGRES_USER: ${POSTGRES_USER:-maybe_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      SYNTH_API_KEY: ${SYNTH_API_KEY:?}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      maybe:
      traefik_backend:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maybe-router.rule=Host(`maybe.home.local`)"
      - "traefik.http.services.maybe-service.loadbalancer.server.port=3000"

  postgres:
    image: postgres:18
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-maybe_user}
      POSTGRES_DB: ${POSTGRES_DB:-maybe_production}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
    networks:
      maybe:
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  app-storage:
  postgres-data:

networks:
  maybe:
    driver: bridge
  traefik_backend:
    external: true