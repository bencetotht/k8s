---
    name: Build and push BACKEND to AWS ECR
    on: 
      push:
        branches:
          - main
        paths:
          - /
    jobs:
      build-push-aws:
        name: Build and Push to AWS ECR
        runs-on: ubuntu-latest
        env:
          IMAGE_NAME: erettsegi-backend
          REPO_NAME: bnbdevelopment/irodalomerettsegi
        steps:
        - name: Checkout
          uses: actions/checkout@v2
    
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
    
        - name: Build, tag, and push the image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
            IMAGE_TAG: ${{ github.run_number }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


# docker tag $IMAGE_NAME:latest europe-west3-docker.pkg.dev/$PROJECT_ID/jegyrendszer/$IMAGE_NAME:latest
# docker tag $IMAGE_NAME:latest europe-west3-docker.pkg.dev/$PROJECT_ID/jegyrendszer/$IMAGE_NAME:2.20.$GIT_TAG
# docker push europe-west3-docker.pkg.dev/$PROJECT_ID/jegyrendszer/$IMAGE_NAME:latest
# docker push europe-west3-docker.pkg.dev/$PROJECT_ID/jegyrendszer/$IMAGE_NAME:2.20.$GIT_TAG