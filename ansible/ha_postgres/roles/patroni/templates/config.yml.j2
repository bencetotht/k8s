scope: postgresql-cluster
namespace: /service/
name: {{ inventory_hostname }}

etcd3:
  hosts: {{ hostvars[groups['servers'][0]]['ansible_host'] }}:2379,{{ hostvars[groups['servers'][1]]['ansible_host'] }}:2379,{{ hostvars[groups['servers'][2]]['ansible_host'] }}:2379
  protocol: https
  cacert: /etc/etcd/ssl/ca.crt
  cert: /etc/etcd/ssl/etcd-node{{ groups['servers'].index(inventory_hostname) + 1 }}.crt
  key: /etc/etcd/ssl/etcd-node{{ groups['servers'].index(inventory_hostname) + 1 }}.key

restapi:
  listen: 0.0.0.0:8008
  connect_address: {{ ansible_host }}:8008
  certfile: /var/lib/postgresql/ssl/server.pem

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
        parameters:
            ssl: 'on'
            ssl_cert_file: /var/lib/postgresql/ssl/server.crt
            ssl_key_file: /var/lib/postgresql/ssl/server.key
        pg_hba:
        - hostssl replication replicator 127.0.0.1/32 md5
        {% for server in groups['servers'] %}
        - hostssl replication replicator {{ hostvars[server]['ansible_host'] }}/32 md5
        {% endfor %}
        - hostssl all all 127.0.0.1/32 md5
        - hostssl all all 0.0.0.0/0 md5
  initdb:
    - encoding: UTF8
    - data-checksums

postgresql:
  listen: 0.0.0.0:5432
  connect_address: {{ ansible_host }}:5432
  data_dir: /var/lib/postgresql/data
  bin_dir: /usr/lib/postgresql/17/bin
  authentication:
    superuser:
      username: postgres
      password: {{ postgres_superuser }}
    replication:
      username: replicator
      password: {{ postgres_replication }}
  parameters:
    max_connections: 100
    shared_buffers: 256MB

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false